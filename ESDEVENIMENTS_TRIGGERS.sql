
/*VALIDACIONS*/
DELIMITER $$
DROP TRIGGER IF EXISTS EMAIL_VALID_PERSONA$$
CREATE TRIGGER EMAIL_VALID_PERSONA BEFORE INSERT ON PERSONA
FOR EACH ROW
BEGIN
	DECLARE MESSAGE_TEXT VARCHAR(100);
    IF NEW.EMAIL NOT REGEXP '^[^@]+@[^@]+\.[^@]{2,}$' THEN
    SIGNAL SQLSTATE '45000'
    SET MESSAGE_TEXT = "L'email de la persona és invàlid";
    END IF;
END$$
DELIMITER ;

DELIMITER $$
DROP TRIGGER IF EXISTS DATA_NAIXEMENT_VALID_PERSONA$$
CREATE TRIGGER DATA_NAIXEMENT_VALID_PERSONA BEFORE INSERT ON PERSONA
FOR EACH ROW
BEGIN
	DECLARE MESSAGE_TEXT VARCHAR(100);
    IF NEW.DATA_NAIXEMENT >= NOW() OR YEAR(NOW())-YEAR(NEW.DATA_NAIXEMENT)>150  THEN
    SIGNAL SQLSTATE '45000'
    SET MESSAGE_TEXT = "L'any de naixement de la persona és invàlid";
    END IF;
END$$
DELIMITER ;

DELIMITER $$
DROP TRIGGER IF EXISTS TELEFON_PERSONA_VALID$$
CREATE TRIGGER TELEFON_PERSONA_VALID BEFORE INSERT ON TELEFON_PERSONA
FOR EACH ROW
BEGIN
	DECLARE MESSAGE_TEXT VARCHAR(100);
    IF NEW.PK_TELEFON_PERSONA NOT REGEXP '(([+][(]?[0-9]{1,3}[)]?)|([(]?[0-9]{4}[)]?))\s*[)]?[-\s\.]?[(]?[0-9]{1,3}[)]?([-\s\.]?[0-9]{3})([-\s\.]?[0-9]{1,4})' THEN
	SIGNAL SQLSTATE '45000'
    SET MESSAGE_TEXT = "El telèfon de la persona és invàlid.";
    END IF;
END $$
DELIMITER ;

DELIMITER $$
DROP TRIGGER IF EXISTS EMAIL_VALID_PUNT_VENTA$$
CREATE TRIGGER EMAIL_VALID_PUNT_VENTA BEFORE INSERT ON PUNT_VENTA
FOR EACH ROW
BEGIN
	DECLARE MESSAGE_TEXT VARCHAR(100);
    IF NEW.PUNT_VENTA.EMAIL NOT REGEXP '^[a-z]{3,}((\.|\_)[a-z]{3,})?@[a-z]{6,}\.[a-z]{2,3}$' THEN
    SIGNAL SQLSTATE '45000'
    SET MESSAGE_TEXT = "El correu electrònic del punt de venta és invàlid.";
    END IF;
END$$
DELIMITER ;

DELIMITER $$
DROP TRIGGER IF EXISTS WEB_VALIDA$$
CREATE TRIGGER WEB_VALIDA BEFORE INSERT ON PUNT_VENTA
FOR EACH ROW
BEGIN
	DECLARE MESSAGE_TEXT VARCHAR(100);
	IF NEW.PUNT_VENTA.WEB NOT REGEXP "^(?:http(s)?:\/\/)?[\w.-]+(?:\.[\w\.-]+)+[\w\-\._~:/?#[\]@!\$&'\(\)\*\+,;=.]+$/" THEN
    SIGNAL SQLSTATE '45000'
    SET MESSAGE_TEXT = "La web del punt de venta no és vàlida";
    END IF;
END $$
DELIMITER ;

DELIMITER $$
DROP TRIGGER IF EXISTS DIRECCIO_VALIDA_PUNT_VENTA$$
CREATE TRIGGER DIRECCIO_VALIDA_PUNT_VENTA BEFORE INSERT ON PUNT_VENTA
FOR EACH ROW
BEGIN
	DECLARE MESSAGE_TEXT VARCHAR(100);
	IF NEW.PUNT_VENTA.DIRECCIO NOT REGEXP '/^([Cc]+[\./\s])?\s?(.*)\,\s*(\d{1,})(\-?\d*?[A-Z]{1}?)?$/' THEN
    SIGNAL SQLSTATE '45000'
    SET MESSAGE_TEXT = "La direcció del punt de venta no és vàlid";
    END IF;
END $$
DELIMITER ;

DELIMITER $$
DROP TRIGGER IF EXISTS TELEFON_PUNT_VENTA_VALID$$
CREATE TRIGGER TELEFON_PUNT_VENTA_VALID BEFORE INSERT ON TELEFON_PUNT_VENTA
FOR EACH ROW
BEGIN
	DECLARE MESSAGE_TEXT VARCHAR(100);
    IF NEW.PK_TELEFON_PUNT_VENTA NOT REGEXP '(([+][(]?[0-9]{1,3}[)]?)|([(]?[0-9]{4}[)]?))\s*[)]?[-\s\.]?[(]?[0-9]{1,3}[)]?([-\s\.]?[0-9]{3})([-\s\.]?[0-9]{1,4})' THEN
	SIGNAL SQLSTATE '45000'
    SET MESSAGE_TEXT = "El telèfon del punt de venta és invàlid.";
    END IF;
END $$
DELIMITER ;

DELIMITER $$
DROP TRIGGER IF EXISTS DIRECCIO_VALIDA_RECINTE$$
CREATE TRIGGER DIRECCIO_VALIDA_RECINTE BEFORE INSERT ON RECINTE
FOR EACH ROW
BEGIN
	DECLARE MESSAGE_TEXT VARCHAR(100);
	IF NEW.DIRECCIO NOT REGEXP '/^([Cc]+[\./\s])?\s?(.*)\,\s*(\d{1,})(\-?\d*?[A-Z]{1}?)?$/' THEN
    SIGNAL SQLSTATE '45000'
    SET MESSAGE_TEXT = "La direcció del recinte no és vàlid";
    END IF;
END $$
DELIMITER ;

DELIMITER $$
DROP TRIGGER IF EXISTS CAPACITAT_VALIDA_RECINTE$$
CREATE TRIGGER CAPACITAT_VALIDA_RECINTE BEFORE INSERT ON RECINTE
FOR EACH ROW
BEGIN
	DECLARE MESSAGE_TEXT VARCHAR(100);
	IF NEW.CAPACITAT <= 0 THEN
    SIGNAL SQLSTATE '45000'
    SET MESSAGE_TEXT = "La capacitat del recinte no és vàlid";
    END IF;
END $$
DELIMITER ;

DELIMITER $$
DROP TRIGGER IF EXISTS DATA_VALIDA_ESDEVENIMENT$$
CREATE TRIGGER DATA_VALIDA_ESDEVENIMENT BEFORE INSERT ON ESDEVENIMENT
FOR EACH ROW
BEGIN
	DECLARE MESSAGE_TEXT VARCHAR(100);
	IF NEW.DATA_INICI >= NEW.DATA_FI THEN
    SIGNAL SQLSTATE '45000'
    SET MESSAGE_TEXT = "La data inici-fi no és vàlida";
    END IF;
END $$
DELIMITER ;

DELIMITER $$
DROP TRIGGER IF EXISTS PREU_VALID_ESDEVENIMENT$$
CREATE TRIGGER PREU_VALID_ESDEVENIMENT BEFORE INSERT ON ESDEVENIMENT
FOR EACH ROW
BEGIN
	DECLARE MESSAGE_TEXT VARCHAR(100);
    IF NEW.PREU < 0.00 THEN
    SIGNAL SQLSTATE '45000'
    SET MESSAGE_TEXT = "El preu es invàlid";
    END IF;
END $$
DELIMITER ;

DELIMITER $$
DROP TRIGGER IF EXISTS BUT_VALIDA_BUTACA$$
CREATE TRIGGER BUT_VALIDA_BUTACA BEFORE INSERT ON BUTACA
FOR EACH ROW
BEGIN
	DECLARE MESSAGE_TEXT VARCHAR(100);
    IF NEW.PK_FILA_BUTACA <=0 OR NEW.PK_NUMERO_BUTACA <=0 THEN
	SIGNAL SQLSTATE '45000'
	SET MESSAGE_TEXT = "La fila o columna de la butaca no pot ser zero o negatiu.";
    END IF;
END$$
DELIMITER ;

DELIMITER $$
DROP TRIGGER IF EXISTS AFORAMENT_VALID_ESDEVENIMENT$$
CREATE TRIGGER AFORAMENT_VALID_ESDEVENIMENT BEFORE INSERT ON ESDEVENIMENT
FOR EACH ROW
BEGIN
	DECLARE MESSAGE_TEXT VARCHAR(100);
    DECLARE capacitat_recinte INT;
    SELECT RECINTE.CAPACITAT INTO capacitat_recinte FROM RECINTE;
    IF NEW.AFORAMENT > capacitat_recinte THEN
    SIGNAL SQLSTATE '45000'
	SET MESSAGE_TEXT = "L'aforament no pot superar la capacitat del recinte";
    END IF;
END $$
DELIMITER ;

DELIMITER $$
DROP TRIGGER IF EXISTS OCUPACIO_VALID_ESDEVENIMENT$$
CREATE TRIGGER OCUPACIO_VALID_ESDEVENIMENT BEFORE INSERT ON ESDEVENIMENT
FOR EACH ROW
BEGIN
	DECLARE MESSAGE_TEXT VARCHAR(100);
    DECLARE aforament INT;
    SELECT ESDEVENIMENT.AFORAMENT INTO aforament FROM ESDEVENIMENT;
    IF NEW.OCUPACIO > aforament THEN
    SIGNAL SQLSTATE '45000'
	SET MESSAGE_TEXT = "L'ocupació no pot superar l'aforament";
    END IF;
END $$
DELIMITER ;

/*Assignar el valor per defecte l'aforament d'un esdeveniment a la capacitat del recinte*/
DELIMITER $$
DROP TRIGGER IF EXISTS DEFAULT_AFORAMENT_ESDEVENIMENT$$
CREATE TRIGGER DEFAULT_AFORAMENT_ESDEVENIMENT AFTER INSERT ON ESDEVENIMENT
FOR EACH ROW
BEGIN
	DECLARE capacitat_recinte INT;
    SELECT RECINTE.CAPACITAT INTO capacitat_recinte FROM RECINTE
    WHERE RECINTE.PK_CODI_RECINTE = NEW.FK_CODI_RECINTE;
    
    UPDATE ESDEVENIMENT
    SET ESDEVENIMENT.AFORAMENT = capacitat_recinte
    WHERE ESDEVENIMENT.PK_ID_ESDEVENIMENT = NEW.PK_ID_ESDEVENIMENT;
END $$
DELIMITER ;

/*Al comprar una entrada, verificar abans que no superi l'aforament. Si no el supera, augmentar ocupació en 1*/
DELIMITER $$
DROP TRIGGER IF EXISTS AFORAMENT_VALID_ENTRADA$$
CREATE TRIGGER AFORAMENT_VALID_ENTRADA BEFORE INSERT ON ENTRADA
FOR EACH ROW
BEGIN
	DECLARE MESSAGE_TEXT VARCHAR(100);
    DECLARE aforament_esdeveniment INT;
    DECLARE num_entrades INT;
    
    SELECT COUNT(PK_NUMERO_ENTRADA)+1 INTO num_entrades FROM ENTRADA
    WHERE NEW.PK_FK_ID_ENTRADA_ESDEVENIMENT = ESDEVENIMENT.PK_ID_ESDEVENIMENT;
    
    SELECT ESDEVENIMENT.AFORAMENT INTO aforament_esdeveniment FROM ESDEVENIMENT
    WHERE ESDEVENIMENT.PK_ID_ESDEVENIMENT = NEW.PK_FK_ID_ENTRADA_ESDEVENIMENT;
    
    IF num_entrades > aforament_esdeveniment THEN
		SIGNAL SQLSTATE '45000'
		SET MESSAGE_TEXT = "Entrades venudes";
	END IF;
END $$

/*Quan hem insertat l'entrada, hem d'actualitzar el comptador d'esdeveniments (ocupació)*/
DELIMITER $$
DROP TRIGGER IF EXISTS ACTUALITZAR_OCUPACIO_ESDEVENIMENT$$
CREATE TRIGGER ACTUALITZAR_OCUPACIO_ESDEVENIMENT AFTER INSERT ON ENTRADA
FOR EACH ROW
BEGIN
	UPDATE ESDEVENIMENT
    SET OCUPACIO = COUNT(PK_NUMERO_ENTRADA)+1
    WHERE ESDEVENIMENT.PK_ID_ESDEVENIMENT = ENTRADA.PK_FK_ID_ENTRADA_ESDEVENIMENT;
END $$
DELIMITER ;